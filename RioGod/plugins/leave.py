from pyrogram import filters
from pyrogram.errors import FloodWait
import asyncio
from RioGod import devine
from config import OWNER_ID, HANDLER


@devine.on_message(filters.command("leave", prefixes=HANDLER) & filters.me)
async def leave_chat(_, message):
    try:
        if len(message.command) > 1:
            group_id = int(message.command[1])
            await devine.send_message(group_id, "** ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ñ ú·¥Ä·¥õ...**")
            msg = await message.reply_text("** ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ñ ú·¥Ä·¥õ …™…¥ ùü∏ s·¥á·¥Ñ...**")
            await message.delete()
            await asyncio.sleep(2)
            await msg.edit("**·¥Ñ ú·¥Ä·¥õ  ü·¥á“ì·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è**")
            await devine.leave_chat(group_id)
        else:
            msg = await message.reply_text("** ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥Ñ ú·¥Ä·¥õ …™…¥ ùü∏ s·¥á·¥Ñ...**")
            await message.delete()
            await asyncio.sleep(2)
            await msg.edit("**·¥Ñ ú·¥Ä·¥õ  ü·¥á“ì·¥õ**")
            await devine.leave_chat(message.chat.id)

    except FloodWait as e:
        await asyncio.sleep(e.value)
        await message.reply_text("**·¥õ Ä è…™…¥…¢ ·¥Ä…¢·¥Ä…™…¥ ·¥Ö·¥ú·¥á ·¥õ·¥è  Ä·¥Ä·¥õ·¥á  ü…™·¥ç…™·¥õs...**")
        await leave_chat(_, message)

    except Exception as e:
        await message.reply_text(
            f"**·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö:** `{e}`\n\n‚Ä¢ **·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è  Ä·¥á·¥ç·¥è·¥†·¥á ·¥ç·¥á “ì Ä·¥è·¥ç  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò.**"
        )
